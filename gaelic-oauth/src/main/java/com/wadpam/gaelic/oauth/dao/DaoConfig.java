package com.wadpam.gaelic.oauth.dao;

import java.util.HashMap;
import java.util.Map;
import net.sf.mardao.core.dao.DaoImpl;
import com.wadpam.gaelic.oauth.domain.DConnection;
import com.wadpam.gaelic.oauth.domain.DOAuth2User;
import com.wadpam.gaelic.oauth.domain.DFactory;

/**
 * Context to define the Dao beans.
 * This file is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2013-07-11T18:39:40.213+0700.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DaoConfig {

    public static Map<Class, DaoImpl> createDaos() {
        final HashMap<Class, DaoImpl> map = new HashMap<Class, DaoImpl>();

        // first, create and map Dao instances:
        final DConnectionDaoBean dConnectionDao =
            new DConnectionDaoBean();
        map.put(DConnection.class, dConnectionDao);
        final DOAuth2UserDaoBean dOAuth2UserDao =
            new DOAuth2UserDaoBean();
        map.put(DOAuth2User.class, dOAuth2UserDao);
        final DFactoryDaoBean dFactoryDao =
            new DFactoryDaoBean();
        map.put(DFactory.class, dFactoryDao);

        // next, wire parents;
        dConnectionDao.setMardaoParentDao(dOAuth2UserDao);

        // finally, wire many-to-ones;
	
        return map;
    }
}