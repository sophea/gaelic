package com.wadpam.gaelic.oauth.provider.dao;

import java.util.HashMap;
import java.util.Map;
import net.sf.mardao.core.dao.DaoImpl;
import com.wadpam.gaelic.oauth.provider.domain.Do2pProfile;
import com.wadpam.gaelic.oauth.provider.domain.Do2pToken;
import com.wadpam.gaelic.oauth.provider.domain.Do2pClient;

/**
 * Context to define the Dao beans.
 * This file is generated by mardao, but edited by developers.
 * It is not overwritten by the generator once it exists.
 *
 * Generated on 2013-07-18T12:02:44.205+0700.
 * @author mardao DAO generator (net.sf.mardao.plugin.ProcessDomainMojo)
 */
public class DaoConfig {

    public static Map<Class, DaoImpl> createDaos() {
        final HashMap<Class, DaoImpl> map = new HashMap<Class, DaoImpl>();

        // first, create and map Dao instances:
        final Do2pProfileDaoBean do2pProfileDao =
            new Do2pProfileDaoBean();
        map.put(Do2pProfile.class, do2pProfileDao);
        final Do2pTokenDaoBean do2pTokenDao =
            new Do2pTokenDaoBean();
        map.put(Do2pToken.class, do2pTokenDao);
        final Do2pClientDaoBean do2pClientDao =
            new Do2pClientDaoBean();
        map.put(Do2pClient.class, do2pClientDao);

        // next, wire parents;
        do2pTokenDao.setMardaoParentDao(do2pProfileDao);

        // finally, wire many-to-ones;
	
        return map;
    }
}